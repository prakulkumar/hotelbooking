{"version":3,"sources":["serviceWorker.js","components/Navbar/navbar.js","components/HotelBookingForm/HotelBookingForm.js","components/Grid/grid.js","components/MainContainer/mainContainer.js","index.js"],"names":["Boolean","window","location","hostname","match","HeaderNavbar","react_default","a","createElement","Navbar","bg","className","roomTypes","HotelBookingForm","state","validated","hotelBookingForm","step","firstName","lastName","address","dateOfArrival","dateOfDeparture","noOfAdults","noOfChildren","noOfNights","rooms","availableRooms","formIsValid","isEdit","bookingId","personId","disable","misc","total","balance","status","modalHeader","previousDepartureDate","previousArrivalDate","nextStep","updatedForm","Object","objectSpread","_this","setState","prevStep","getPersonDetailsForm","Fragment","Form","Row","Group","as","Col","controlId","Control","title","type","placeholder","value","name","onChange","event","inputChangedHandler","disabled","required","rows","es","selected","onSelect","isDate","dateFormat","placeholderText","minDate","Date","key","min","dateFNS","differenceInCalendarDays","readOnly","getRoomDetailsForm","Button","variant","onClick","addRoom","map","room","index","md","roomType","roomDetailsChangedHandler","hidden","i","concat","roomNumber","style","fontSize","deleteRoom","getAmountDetails","checkMonth","date","dateObj","axios","post","then","res","data","getAvailableRooms","catch","error","console","log","monthDetail","year","getYear","props","detailsForForm","arrival","month","getMonth","departure","toConsumableArray","length","setDefaultRoom","departureDate","tempObj","filter","updatedRooms","push","target","charAt","toUpperCase","slice","Array","Number","fill","defineProperty","checkValidity","preventDefault","currentTarget","hotelBookedHandler","bookingData","element","url","handleBookings","onClose","showModalHandler","showModal","closeModalHandler","clearForm","updatedFormElement","edit","_this2","this","available","get","form","checkIn","checkOut","adults","children","_this3","currentStepForm","modalTitle","Modal","Title","footer","editButton","Footer","marginTop","e","show","onHide","centered","Header","closeButton","Body","noValidate","onSubmit","Component","Grid","items","monthlyBooking","loading","getRandomColor","hex","String","Math","random","toString","replace","c","rgb","parseInt","substr","round","max","getRooms","monthlyBookingObj","tempArray","finalArray","getMonthObj","monthNumber","monthObj","bookRoom","numberOfDays","unshift","showRoomNumber","renderShortName","shortName","split","setClassForCell","subitemIndex","getDate","tooltipPlacement","itemIndex","renderItems","item","subitem","showBooking","OverlayTrigger","placement","overlay","Tooltip","id","color","background","fontWeight","booking","bookObj","find","dates","forEach","dateNumber","personName","bookingArray","changeMonth","getDaysInMonth","getNameOfMonth","format","dayOfMonth","renderOverlay","role","setClassForNavigatingMonth","modalStatus","newRow","height","components_HotelBookingForm_HotelBookingForm","MainContainer","Navbar_navbar","Grid_grid","ReactDOM","render","MainContainer_mainContainer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a217b6f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport './navbar.css';\r\n\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nfunction HeaderNavbar() {\r\n    return (\r\n        <Navbar bg=\"dark\" className=\"navbar__mainContainer\">\r\n            ROOM BOOKING APP\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default HeaderNavbar;\r\n","import React, { Component } from 'react';\r\n\r\nimport { Button, Modal, Form, Col } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport './HotelBookingForm.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport dateFNS from 'date-fns';\r\nimport axios from 'axios';\r\n\r\nconst roomTypes = ['AC', 'Non AC', 'Deluxe', 'Suite', 'Dormitory'];\r\n\r\nclass HotelBookingForm extends Component {\r\n    state = {\r\n        validated: false,\r\n        hotelBookingForm: {\r\n            step: 1,\r\n            firstName: '',\r\n            lastName: '',\r\n            address: '',\r\n            dateOfArrival: '',\r\n            dateOfDeparture: '',\r\n            noOfAdults: '',\r\n            noOfChildren: '',\r\n            noOfNights: 0,\r\n            rooms: []\r\n        },\r\n        availableRooms: [],\r\n        formIsValid: true,\r\n        isEdit: false,\r\n        bookingId: null,\r\n        personId: null,\r\n        disable: false,\r\n        misc: '',\r\n        total: '',\r\n        balance: '',\r\n        status: '',\r\n        modalHeader: 'Booking Details',\r\n        previousDepartureDate: '',\r\n        previousArrivalDate: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.showModal) {\r\n            let disable = false;\r\n            if (this.props.status === 'viewBooking') {\r\n                disable = true\r\n            }\r\n            let updatedForm = { ...this.state.hotelBookingForm };\r\n            updatedForm.dateOfArrival = this.props.detailsForForm.date;\r\n            this.setState({ hotelBookingForm: updatedForm, disable, status: this.props.status });\r\n            if (!this.props.detailsForForm.available) {\r\n                axios.get(`/getBookingDetails/${this.props.detailsForForm.bookingId}`)\r\n                    .then(res => {\r\n                        let data = res.data;\r\n                        console.log(data)\r\n                        let form = {\r\n                            step: 1,\r\n                            firstName: data.firstName,\r\n                            lastName: data.lastName,\r\n                            address: data.address,\r\n                            dateOfArrival: new Date(data.checkIn),\r\n                            dateOfDeparture: new Date(data.checkOut),\r\n                            noOfAdults: data.adults,\r\n                            noOfChildren: data.children,\r\n                            rooms: data.rooms\r\n                        }\r\n                        this.setState({\r\n                            hotelBookingForm: form,\r\n                            bookingId: data.bookingId,\r\n                            personId: data.personId,\r\n                            misc: data.misc,\r\n                            balance: data.balance,\r\n                            previousDepartureDate: data.checkOut,\r\n                            previousArrivalDate: data.checkIn\r\n                        });\r\n                        this.getAvailableRooms(new Date(data.checkOut));\r\n                    })\r\n                    .catch(error => console.log(error))\r\n            }\r\n        }\r\n    }\r\n\r\n    nextStep = () => {\r\n        const updatedForm = { ...this.state.hotelBookingForm }\r\n        updatedForm.step += 1;\r\n        this.setState({ hotelBookingForm: updatedForm })\r\n    }\r\n\r\n    prevStep = () => {\r\n        const updatedForm = { ...this.state.hotelBookingForm }\r\n        updatedForm.step -= 1;\r\n        this.setState({ hotelBookingForm: updatedForm })\r\n    }\r\n\r\n    getPersonDetailsForm = () => (\r\n        <React.Fragment>\r\n            <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formPlaintext\">\r\n                    <Form.Control\r\n                        title=\"First Name\"\r\n                        type=\"text\"\r\n                        placeholder=\"First Name\"\r\n                        value={this.state.hotelBookingForm.firstName}\r\n                        name=\"firstName\"\r\n                        onChange={(event) => this.inputChangedHandler(event)}\r\n                        disabled={!this.state.isEdit && this.state.disable}\r\n                        className=\"valueCapitalize\"\r\n                        required />\r\n                    <span className=\"required\">*</span>\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formPlaintext\">\r\n                    <Form.Control\r\n                        title=\"Last Name\"\r\n                        type=\"text\"\r\n                        placeholder=\"Last Name\"\r\n                        value={this.state.hotelBookingForm.lastName}\r\n                        name=\"lastName\"\r\n                        className=\"valueCapitalize\"\r\n                        onChange={(event) => this.inputChangedHandler(event)}\r\n                        disabled={!this.state.isEdit && this.state.disable}\r\n                        required />\r\n                    <span className=\"required\">*</span>\r\n                </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formPlaintextarea\">\r\n                    <Form.Control\r\n                        title=\"Address\"\r\n                        as=\"textarea\"\r\n                        rows=\"3\"\r\n                        placeholder=\"Address\"\r\n                        value={this.state.hotelBookingForm.address}\r\n                        name=\"address\"\r\n                        onChange={(event) => this.inputChangedHandler(event)}\r\n                        disabled={!this.state.isEdit && this.state.disable}\r\n                        required />\r\n                    <span className=\"required\">*</span>\r\n                </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formPlainCalendar\">\r\n                    <DatePicker\r\n                        title=\"Date Of Arrival\"\r\n                        selected={this.state.hotelBookingForm.dateOfArrival}\r\n                        onSelect={(event) => this.inputChangedHandler({ event, name: \"dateOfArrival\", isDate: true })}\r\n                        dateFormat=\"MMMM d, yyyy\"\r\n                        placeholderText=\"Date of Arrival\"\r\n                        minDate={new Date()}\r\n                        key=\"dateofArrival\"\r\n                        className=\"form-control\"\r\n                        disabled={!this.state.isEdit && this.state.disable}\r\n                        required\r\n                    />\r\n                    <span className=\"required\">*</span>\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formPlaintCalendar\">\r\n                    <DatePicker\r\n                        title=\"Date Of Departure\"\r\n                        selected={this.state.hotelBookingForm.dateOfDeparture}\r\n                        onSelect={(event) => this.inputChangedHandler({ event, name: \"dateOfDeparture\", isDate: true })}\r\n                        dateFormat=\"MMMM d, yyyy\"\r\n                        placeholderText=\"Date of Departure\"\r\n                        minDate={this.state.hotelBookingForm.dateOfArrival}\r\n                        key=\"dateOfDeparture\"\r\n                        className=\"form-control\"\r\n                        disabled={!this.state.isEdit && this.state.disable}\r\n                        required\r\n                    />\r\n                    <span className=\"required\">*</span>\r\n                </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formPlainNumber\">\r\n                    <Form.Control\r\n                        title=\"Adults\"\r\n                        type=\"number\"\r\n                        placeholder=\"Adults\"\r\n                        value={this.state.hotelBookingForm.noOfAdults}\r\n                        name=\"noOfAdults\"\r\n                        onChange={(event) => this.inputChangedHandler(event)}\r\n                        disabled={!this.state.isEdit && this.state.disable}\r\n                        min=\"0\"\r\n                        required />\r\n                    <span className=\"required\">*</span>\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formPlainNumber\">\r\n                    <Form.Control\r\n                        title=\"Children\"\r\n                        type=\"number\"\r\n                        placeholder=\"Children\"\r\n                        value={this.state.hotelBookingForm.noOfChildren}\r\n                        name=\"noOfChildren\"\r\n                        onChange={(event) => this.inputChangedHandler(event)}\r\n                        disabled={!this.state.isEdit && this.state.disable}\r\n                        min=\"0\"\r\n                        required />\r\n                    <span className=\"required\">*</span>\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formPlainNumber\">\r\n                    <Form.Control\r\n                        title=\"Nights\"\r\n                        type=\"number\"\r\n                        placeholder=\"Nights\"\r\n                        name=\"noOfNights\"\r\n                        value={this.state.hotelBookingForm.dateOfDeparture ? dateFNS.differenceInCalendarDays(this.state.hotelBookingForm.dateOfDeparture, this.state.hotelBookingForm.dateOfArrival) : 0}\r\n                        min=\"0\"\r\n                        readOnly\r\n                        required />\r\n                    <span className=\"required\">*</span>\r\n                </Form.Group>\r\n            </Form.Row>\r\n        </React.Fragment>\r\n    )\r\n\r\n    getRoomDetailsForm = () => (\r\n        <React.Fragment>\r\n            <Form.Row>\r\n                <Form.Group>\r\n                    <Button variant=\"primary\" type=\"button\" onClick={this.addRoom}\r\n                        disabled={!this.state.isEdit && this.state.disable}>\r\n                        Add Room\r\n                        </Button>\r\n                </Form.Group>\r\n            </Form.Row>\r\n            <div className=\"roomDetailsForm\">\r\n                {\r\n                    this.state.hotelBookingForm.rooms.map((room, index) => {\r\n                        return (\r\n                            <Form.Row key={index}>\r\n                                <Form.Group as={Col} md=\"5\" controlId=\"formPlainSelect\">\r\n                                    <Form.Control\r\n                                        as=\"select\" title=\"Room Type\"\r\n                                        value={this.state.hotelBookingForm.rooms[index].roomType}\r\n                                        name=\"roomType\"\r\n                                        onChange={(event) => this.roomDetailsChangedHandler(event, \"roomType\", index)}\r\n                                        disabled={!this.state.isEdit && this.state.disable}\r\n                                        required >\r\n                                        <option value='' hidden>Room Type</option>\r\n                                        {roomTypes.map((roomType, i) => {\r\n                                            return <option key={`roomType${i}`}>{roomType}</option>\r\n                                        })}\r\n                                    </Form.Control>\r\n                                    <span className=\"required\">*</span>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} md=\"5\" controlId=\"formPlainSelect\">\r\n                                    <Form.Control\r\n                                        as=\"select\" title=\"Room No\"\r\n                                        value={this.state.hotelBookingForm.rooms[index].roomNumber}\r\n                                        name=\"roomNo\"\r\n                                        onChange={(event) => this.roomDetailsChangedHandler(event, \"roomNumber\", index)}\r\n                                        disabled={!this.state.isEdit && this.state.disable}\r\n                                        required >\r\n                                        <option value='' hidden>Room No</option>\r\n                                        {this.state.availableRooms.map((room, i) => {\r\n                                            if (room.roomType === this.state.hotelBookingForm.rooms[index].roomType) {\r\n                                                return <option key={`roomNo${i}`}>{room.roomNumber}</option>\r\n                                            }\r\n                                            return null;\r\n                                        })}\r\n                                    </Form.Control>\r\n                                    <span className=\"required\">*</span>\r\n                                </Form.Group>\r\n                                {index === 0 ? null : (\r\n                                    <React.Fragment>\r\n                                        <Form.Group as={Col} md=\"2\" className=\"icon\">\r\n                                            <i\r\n                                                className=\"fa fa-trash-o pointerCursor\"\r\n                                                style={{ fontSize: \"20px\" }}\r\n                                                onClick={() => this.deleteRoom(index)}\r\n                                                title=\"Delete\">\r\n                                            </i>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"5\" controlId=\"formPlainSelect\">\r\n                                            <Form.Control\r\n                                                as=\"select\" title=\"Room No\"\r\n                                                value={this.state.hotelBookingForm.rooms[index].roomNumber}\r\n                                                name=\"roomNo\"\r\n                                                onChange={(event) => this.roomDetailsChangedHandler(event, \"roomNumber\", index)}\r\n                                                disabled={!this.state.isEdit && this.state.disable}\r\n                                                required >\r\n                                                <option value='' hidden>Room No</option>\r\n                                                {this.state.availableRooms.map((room, i) => {\r\n                                                    if (room.roomType === this.state.hotelBookingForm.rooms[index].roomType) {\r\n                                                        return <option key={`roomNo${i}`}>{room.roomNumber}</option>\r\n                                                    }\r\n                                                    return null;\r\n                                                })}\r\n                                            </Form.Control>\r\n                                            <span className=\"required\">*</span>\r\n                                        </Form.Group>\r\n                                        {index === 0 ? null : (\r\n                                            <Form.Group as={Col} md=\"2\" className=\"icon\">\r\n                                                <Button\r\n                                                    variant=\"link\"\r\n                                                    disabled={!this.state.isEdit && this.state.disable}><i\r\n                                                        className=\"fa fa-trash-o pointerCursor deleteButton\"\r\n                                                        style={{ fontSize: \"20px\" }}\r\n                                                        onClick={() => this.deleteRoom(index)}\r\n                                                        title=\"Delete\">\r\n                                                    </i></Button>\r\n                                            </Form.Group>\r\n                                        )}\r\n                                    </React.Fragment>\r\n                                )}\r\n                            </Form.Row>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n\r\n    getAmountDetails = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"separator\"></div>\r\n                <div>\r\n                    <div className=\"amountDetails\" >\r\n                        <p>Total:</p><p>10000</p>\r\n                    </div>\r\n                    <div className=\"amountDetails\">\r\n                        <p>Advance:</p><p>3000</p>\r\n                    </div>\r\n                    <div className=\"amountDetails\">\r\n                        <p>Misc:</p><p>{this.state.misc}</p>\r\n                    </div>\r\n                    <div className=\"amountDetails\">\r\n                        <p>Balance:</p><p>{this.state.balance}</p>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    checkMonth = (date) => {\r\n        const dateObj = {\r\n            dateOfArrival: this.state.hotelBookingForm.dateOfArrival,\r\n            dateOfDeparture: date\r\n        };\r\n        axios.post('/createBulkMonthObj', dateObj)\r\n            .then(res => {\r\n                if (res.status === 200 && res.data === 'done') {\r\n                    this.getAvailableRooms(date);\r\n                }\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    getAvailableRooms = (date) => {\r\n        const monthDetail = {\r\n            year: dateFNS.getYear(this.props.detailsForForm.date),\r\n            arrival: {\r\n                date: this.props.detailsForForm.date,\r\n                month: dateFNS.getMonth(this.props.detailsForForm.date)\r\n            },\r\n            departure: {\r\n                date: date,\r\n                month: dateFNS.getMonth(date)\r\n            }\r\n        }\r\n        axios.post('/getAvailableRooms', monthDetail)\r\n            .then(res => {\r\n                let data = res.data;\r\n                let rooms = [...this.state.hotelBookingForm.rooms];\r\n                this.setState({ availableRooms: data.concat(rooms) });\r\n                if (this.state.hotelBookingForm.rooms.length === 0) { this.setDefaultRoom(date) };\r\n            }).catch(error => console.log(error));\r\n    }\r\n\r\n    setDefaultRoom = (departureDate) => {\r\n        let tempObj;\r\n        let room = this.state.availableRooms.filter(room => room.roomNumber === this.props.detailsForForm.roomNumber);\r\n        room.length > 0 ? tempObj = room[0] : tempObj = this.state.availableRooms[0];\r\n        let updatedForm = { ...this.state.hotelBookingForm };\r\n        let updatedRooms = [...updatedForm.rooms];\r\n        updatedRooms.push({\r\n            roomType: tempObj.roomType,\r\n            roomNumber: tempObj.roomNumber\r\n        })\r\n        updatedForm.rooms = updatedRooms;\r\n        this.setState({ hotelBookingForm: updatedForm });\r\n    }\r\n\r\n    inputChangedHandler = (event) => {\r\n        let updatedForm = { ...this.state.hotelBookingForm };\r\n        if (event.isDate) {\r\n            updatedForm[event.name] = event.event;\r\n            this.setState({ hotelBookingForm: updatedForm });\r\n            if (event.name === 'dateOfArrival') {\r\n                updatedForm['dateOfDeparture'] = '';\r\n                this.setState({ hotelBookingForm: updatedForm });\r\n            }\r\n\r\n            if (event.name === 'dateOfDeparture') this.checkMonth(event.event);\r\n        }\r\n        else {\r\n            updatedForm[event.target.name] = event.target.name === 'firstName' || event.target.name === 'lastName' ? event.target.value.charAt(0).toUpperCase() + event.target.value.slice(1) : event.target.value;\r\n            if (event.target.name === 'noOfRooms') {\r\n                updatedForm['rooms'] = new Array(Number(event.target.value)).fill({});\r\n            }\r\n            this.setState({ hotelBookingForm: updatedForm });\r\n        }\r\n    }\r\n\r\n    roomDetailsChangedHandler = (event, name, index) => {\r\n        let updatedForm = { ...this.state.hotelBookingForm };\r\n        let updatedRooms = [...updatedForm.rooms];\r\n        updatedRooms[index] = {\r\n            ...updatedRooms[index],\r\n            [name]: event.target.value\r\n        }\r\n        updatedForm.rooms = updatedRooms;\r\n        this.setState({ hotelBookingForm: updatedForm });\r\n    }\r\n\r\n    checkValidity = (event) => {\r\n        event.preventDefault();\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity()) {\r\n            this.nextStep();\r\n        }\r\n        this.setState({ validated: true });\r\n    }\r\n\r\n    hotelBookedHandler = (event) => {\r\n        event.preventDefault();\r\n        let bookingData = {};\r\n        for (let element in this.state.hotelBookingForm) {\r\n            bookingData[element] = this.state.hotelBookingForm[element];\r\n        }\r\n        console.log(bookingData);\r\n\r\n        let url = '';\r\n        if (this.state.isEdit && this.state.disable) {\r\n            console.log('update');\r\n            url = '/updateBookingDetails';\r\n            bookingData['personId'] = this.state.personId;\r\n            bookingData['bookingId'] = this.state.bookingId;\r\n            bookingData['previousDepartureDate'] = this.state.previousDepartureDate;\r\n            bookingData['previousArrivalDate'] = this.state.previousArrivalDate;\r\n        }\r\n        else { console.log('newbooking'); url = '/addBookingDetails' }\r\n\r\n        axios.post(url, bookingData)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                if (res.status === 200) this.props.handleBookings();\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n        this.props.onClose();\r\n\r\n    }\r\n\r\n    showModalHandler = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    closeModalHandler = () => {\r\n        this.setState({ validated: false });\r\n        this.clearForm();\r\n        this.props.onClose();\r\n    }\r\n\r\n    clearForm = () => {\r\n        let updatedForm = { ...this.state.hotelBookingForm };\r\n        for (let element in updatedForm) {\r\n            let updatedFormElement = { ...updatedForm[element] }\r\n            if (element === 'rooms') {\r\n                updatedFormElement = [];\r\n            } else {\r\n                updatedFormElement = '';\r\n            }\r\n            updatedForm[element] = updatedFormElement;\r\n        }\r\n        this.setState({ hotelBookingForm: updatedForm });\r\n    }\r\n\r\n    addRoom = () => {\r\n        let updatedForm = { ...this.state.hotelBookingForm };\r\n        let updatedRooms = [...updatedForm.rooms]\r\n        updatedRooms.push({});\r\n        updatedForm.rooms = updatedRooms;\r\n        this.setState({ hotelBookingForm: updatedForm });\r\n    }\r\n\r\n    deleteRoom = (index) => {\r\n        console.log(index)\r\n        let updatedForm = { ...this.state.hotelBookingForm };\r\n        let rooms = [...updatedForm.rooms]\r\n        let updatedRooms = rooms.filter((room, i) => i !== index);\r\n        updatedForm.rooms = updatedRooms;\r\n        console.log(updatedRooms)\r\n        this.setState({ hotelBookingForm: updatedForm });\r\n    }\r\n\r\n    edit = () => {\r\n        console.log(true);\r\n        this.setState({ isEdit: true, status: 'editBooking' });\r\n    }\r\n\r\n    render() {\r\n        const { step } = this.state.hotelBookingForm;\r\n        let currentStepForm = null;\r\n        let modalTitle = null;\r\n        switch (step) {\r\n            case 1:\r\n                modalTitle = <Modal.Title>Booking Details</Modal.Title>;\r\n                currentStepForm = this.getPersonDetailsForm();\r\n                break;\r\n            case 2:\r\n                modalTitle = <Modal.Title>Room Details</Modal.Title>;\r\n                currentStepForm = this.getRoomDetailsForm();\r\n                break;\r\n            case 3:\r\n                modalTitle = <Modal.Title>Amount Details</Modal.Title>;\r\n                currentStepForm = this.getAmountDetails();\r\n                break;\r\n\r\n            default:\r\n                modalTitle = <Modal.Title>Booking Details</Modal.Title>;\r\n                currentStepForm = this.getPersonDetailsForm();\r\n        }\r\n\r\n        let footer = null;\r\n        let editButton = null;\r\n        switch (this.state.status) {\r\n            case 'newBooking':\r\n                editButton = null;\r\n                footer = (\r\n                    <Modal.Footer style={{ marginTop: '2%' }}>\r\n                        {this.state.hotelBookingForm.step === 1 ?\r\n                            <Button variant=\"primary\" type=\"submit\"\r\n                                disabled={this.state.hotelBookingForm.dateOfDeparture === ''}>Next</Button> : null}\r\n                        {this.state.hotelBookingForm.step === 2 ?\r\n                            (<React.Fragment>\r\n                                <Button variant=\"secondary\" onClick={this.prevStep}>Previous</Button>\r\n                                <Button variant=\"primary\" onClick={(e) => this.hotelBookedHandler(e)}>Submit</Button>\r\n                            </React.Fragment>) : null}\r\n                    </Modal.Footer>\r\n                )\r\n                break;\r\n\r\n            case 'viewBooking':\r\n                editButton = (\r\n                    <div className=\"editButton\" title=\"Edit\" onClick={this.edit}>\r\n                        <i className=\"fa fa-pencil pointerCursor\" style={{ fontSize: \"18px\" }}></i>\r\n                    </div>\r\n                );\r\n                footer = (\r\n                    <Modal.Footer style={{ marginTop: '2%' }}>\r\n                        {this.state.hotelBookingForm.step === 1 ? null : <Button variant=\"secondary\" onClick={this.prevStep}>Previous</Button>}\r\n                        {this.state.hotelBookingForm.step < 3 ? <Button variant=\"primary\" onClick={this.nextStep}>Next</Button> : null}\r\n                    </Modal.Footer>\r\n                )\r\n                break;\r\n\r\n            case 'editBooking':\r\n                editButton = null;\r\n                footer = (\r\n                    <Modal.Footer style={{ marginTop: '2%' }}>\r\n                        {this.state.hotelBookingForm.step === 1 ? null : <Button variant=\"secondary\" onClick={this.prevStep}>Previous</Button>}\r\n                        {this.state.hotelBookingForm.step < 3 ? <Button variant=\"primary\" type=\"submit\">Next</Button> : null}\r\n                        {this.state.hotelBookingForm.step === 3 ? <Button variant=\"primary\" onClick={(e) => this.hotelBookedHandler(e)}>Submit</Button> : null}\r\n                    </Modal.Footer>\r\n                )\r\n                break;\r\n\r\n            default: footer = null;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Modal\r\n                    show={this.props.showModal}\r\n                    onHide={this.closeModalHandler}\r\n                    centered>\r\n                    <Modal.Header closeButton>\r\n                        {modalTitle}\r\n                        {editButton}\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form noValidate validated={this.state.validated} onSubmit={(e) => this.checkValidity(e)}>\r\n                            {currentStepForm}\r\n                            {footer}\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HotelBookingForm;","import React, { Component } from 'react';\r\nimport './grid.css';\r\nimport dateFNS from 'date-fns';\r\nimport { Tooltip, OverlayTrigger, Navbar } from 'react-bootstrap';\r\nimport HotelBookingForm from '../HotelBookingForm/HotelBookingForm';\r\nimport axios from 'axios';\r\n\r\nclass Grid extends Component {\r\n    state = {\r\n        showModal: false,\r\n        items: [],\r\n        rooms: [],\r\n        monthlyBooking: {},\r\n        loading: true,\r\n        detailsForForm: {}\r\n    }\r\n\r\n    getRandomColor = () => {\r\n        var lum = -0.25;\r\n        var hex = String('#' + Math.random().toString(16).slice(2, 8).toUpperCase()).replace(/[^0-9a-f]/gi, '');\r\n        if (hex.length < 6) {\r\n            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n        }\r\n        var rgb = \"#\",\r\n            c, i;\r\n        for (i = 0; i < 3; i++) {\r\n            c = parseInt(hex.substr(i * 2, 2), 16);\r\n            c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\r\n            rgb += (\"00\" + c).substr(c.length);\r\n        }\r\n        return rgb;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const date = new Date();\r\n        const monthNumber = dateFNS.getMonth(date);\r\n        const year = dateFNS.getYear(date);\r\n        const numberOfDays = dateFNS.getDaysInMonth(new Date(year, monthNumber));\r\n\r\n        const monthlyBookingObj = {\r\n            monthNumber,\r\n            year,\r\n            numberOfDays,\r\n            bookingId: 12345\r\n        }\r\n\r\n        this.setState({ monthlyBooking: monthlyBookingObj });\r\n        this.getRooms(monthlyBookingObj)\r\n    }\r\n\r\n    getRooms = (monthlyBookingObj) => {\r\n        axios.get('/getRooms')\r\n            .then(res => {\r\n                this.setState({ rooms: res.data });\r\n\r\n                const tempArray = new Array(this.state.rooms.length);\r\n                this.finalArray(tempArray, monthlyBookingObj);\r\n                this.getMonthObj({ year: monthlyBookingObj.year, monthNumber: monthlyBookingObj.monthNumber });\r\n            }).catch(error => console.log(error));\r\n    }\r\n\r\n    getMonthObj = (monthObj) => {\r\n        axios.post('/checkForMonthObj', monthObj)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                if (res.status === 200) {\r\n                    this.bookRoom(res.data[0]);\r\n                    this.setState({ loading: false });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.setState({ loading: false })\r\n            })\r\n    }\r\n\r\n    finalArray = (tempArray, monthlyBooking) => {\r\n        for (let i = 0; i < tempArray.length; i++) {\r\n            tempArray[i] = new Array(monthlyBooking.numberOfDays).fill({ roomNumber: this.state.rooms[i].roomNumber, available: true });\r\n            tempArray[i].unshift({ showRoomNumber: this.state.rooms[i].roomNumber });\r\n        }\r\n\r\n        this.setState({ items: tempArray, monthlyBooking });\r\n    }\r\n\r\n    renderShortName = (name) => {\r\n        const shortName = name.split(' ');\r\n        return shortName[0].charAt(0) + shortName[1].charAt(0);\r\n    }\r\n\r\n    setClassForCell = (subitemIndex) => {\r\n        let date = dateFNS.getDate(new Date());\r\n        let month = dateFNS.getMonth(new Date());\r\n        return subitemIndex < date && month === this.state.monthlyBooking.monthNumber ? 'template_subitem noselect pointerCursor disable-cell' : 'template_subitem noselect pointerCursor';\r\n    }\r\n\r\n    tooltipPlacement = (itemIndex) => {\r\n        return itemIndex === 0 || itemIndex === 1 ? 'bottom' : 'top';\r\n    }\r\n\r\n    renderItems = () => {\r\n        return this.state.items.map((item, itemIndex) =>\r\n            <div className=\"template_item\" key={'item' + itemIndex}>\r\n                {item.map((subitem, subitemIndex) =>\r\n                    subitem.showBooking ?\r\n                        <OverlayTrigger placement={this.tooltipPlacement(itemIndex)} key={'subitem' + subitemIndex}\r\n                            overlay={<Tooltip id={`tooltip-${this.tooltipPlacement(itemIndex)}`}>{subitem.name}</Tooltip>}>\r\n                            <div className={this.setClassForCell(subitemIndex)} style={{ color: subitem.color, background: 'rgb(240,255,255)', fontWeight: 'bold' }} onClick={() => this.showModalHandler(subitem, subitemIndex)}>{this.renderShortName(subitem.name)}</div>\r\n                        </OverlayTrigger> :\r\n                        subitem.showRoomNumber ?\r\n                            <div className=\"template_subitem noselect importantCells\" key={'subitem' + subitemIndex}>{subitem.showRoomNumber}</div>\r\n                            : <div key={'subitem' + subitemIndex} className={this.setClassForCell(subitemIndex)} onClick={() => this.showModalHandler(subitem, subitemIndex)}>\r\n                                <div className=\"template_subitem_showOnHover\">{subitem.roomNumber}</div>\r\n                            </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    booking = (bookObj, color) => {\r\n        const tempArray = [...this.state.items];\r\n        const find = tempArray.find(item => item[0].showRoomNumber === bookObj.roomNumber);\r\n\r\n        if (find) {\r\n            bookObj.dates.forEach(date => {\r\n                let dateNumber = dateFNS.getDate(date);\r\n                find[dateNumber] = { ...find[dateNumber], bookingId: bookObj.bookingId, showBooking: true, name: bookObj.personName, color, available: false };\r\n            });\r\n        }\r\n        this.setState({ items: tempArray });\r\n    }\r\n\r\n    bookRoom = (monthObj) => {\r\n        monthObj.bookingArray.forEach(item => {\r\n            const color = this.getRandomColor();\r\n            this.booking(item, color);\r\n        })\r\n    }\r\n\r\n    changeMonth = (value) => {\r\n        this.setState({ loading: true });\r\n        const monthlyBooking = { ...this.state.monthlyBooking };\r\n        const numberOfDays = dateFNS.getDaysInMonth(new Date(monthlyBooking.year, monthlyBooking.monthNumber + value));\r\n        monthlyBooking.monthNumber = monthlyBooking.monthNumber + value;\r\n\r\n        monthlyBooking.numberOfDays = numberOfDays;\r\n\r\n        monthlyBooking.bookingId = monthlyBooking.bookingId + value;\r\n\r\n        if (monthlyBooking.monthNumber > 11) {\r\n            monthlyBooking.monthNumber = 0;\r\n        } else if (monthlyBooking.monthNumber < 0) {\r\n            monthlyBooking.monthNumber = 11;\r\n        }\r\n\r\n        if (value === 1 && monthlyBooking.monthNumber === 0) {\r\n            monthlyBooking.year = monthlyBooking.year + 1;\r\n        } else if (value === -1 && monthlyBooking.monthNumber === 11) {\r\n            monthlyBooking.year = monthlyBooking.year - 1;\r\n        }\r\n\r\n        this.setState({ monthlyBooking });\r\n\r\n        const tempArray = new Array(this.state.rooms.length);\r\n        this.finalArray(tempArray, monthlyBooking);\r\n\r\n        this.getMonthObj({ year: monthlyBooking.year, monthNumber: monthlyBooking.monthNumber });\r\n    }\r\n\r\n    getNameOfMonth = () => {\r\n        return dateFNS.format(new Date(this.state.monthlyBooking.year, this.state.monthlyBooking.monthNumber), 'MMMM').toUpperCase();\r\n    }\r\n\r\n    showModalHandler = (subitem, dayOfMonth) => {\r\n        const monthlyBooking = this.state.monthlyBooking;\r\n        subitem.date = new Date(monthlyBooking.year, monthlyBooking.monthNumber, dayOfMonth);\r\n        this.setState({ detailsForForm: subitem, showModal: true });\r\n    }\r\n\r\n    closeModalHandler = () => {\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n    renderOverlay = () => {\r\n        return (this.state.loading ?\r\n            <div className=\"template_overlay\">\r\n                <div className=\"template_overlay__container\">\r\n                    <div className=\"spinner-border text-light\" role=\"status\"></div>\r\n                </div>\r\n            </div>\r\n            : null)\r\n    }\r\n\r\n    setClassForNavigatingMonth = () => {\r\n        let month = dateFNS.getMonth(new Date());\r\n        return month === this.state.monthlyBooking.monthNumber ? \"fa fa-chevron-left disableMonthNav\" : \"fa fa-chevron-left pointerCursor\";\r\n    }\r\n\r\n    handleBookings = () => {\r\n        this.getRooms(this.state.monthlyBooking);\r\n    }\r\n\r\n    modalStatus = () => {\r\n        return this.state.detailsForForm.available ? 'newBooking' : 'viewBooking';\r\n    }\r\n\r\n    render() {\r\n        let newRow = [];\r\n        if (this.state.monthlyBooking.numberOfDays) {\r\n            newRow = new Array(this.state.monthlyBooking.numberOfDays + 1);\r\n            for (let i = 0; i < newRow.length; i++) {\r\n                if (i !== 0) { newRow[i] = { date: i } } else { newRow[i] = {} }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"template_container\">\r\n                {this.renderOverlay()}\r\n                {this.state.monthlyBooking.year ? <div style={{ height: '100%' }}>\r\n                    <Navbar bg='light' className=\"app__navbar\">\r\n                        <i className={this.setClassForNavigatingMonth()} onClick={() => this.changeMonth(-1)}></i>\r\n                        <div style={{ fontWeight: 'bold', fontSize: '18px' }}>{this.getNameOfMonth()} {this.state.monthlyBooking.year}</div>\r\n                        <i className=\"fa fa-chevron-right pointerCursor\" onClick={() => this.changeMonth(1)}></i>\r\n                    </Navbar>\r\n                    <div className=\"template_item noselect\">{newRow.map((subitem, index) =>\r\n                        <div key={`app__${subitem.date}`} className=\"template_subitem importantCells\">\r\n                            {subitem.date < 10 ? '0' + subitem.date : subitem.date}\r\n                        </div>)}\r\n                    </div>\r\n                    <div className=\"template_item__container\">{this.renderItems()}</div>\r\n\r\n                    {this.state.showModal ? <HotelBookingForm\r\n                        detailsForForm={this.state.detailsForForm}\r\n                        showModal={this.state.showModal}\r\n                        onClose={this.closeModalHandler}\r\n                        handleBookings={this.handleBookings}\r\n                        status={this.modalStatus()}>\r\n                    </HotelBookingForm> : null}\r\n                </div> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Grid;","import React from 'react';\r\nimport './mainContainer.css';\r\nimport HeaderNavbar from '../Navbar/navbar';\r\nimport Grid from '../Grid/grid';\r\n\r\nfunction MainContainer() {\r\n    return (\r\n        <div style={{ height: '100%' }}>\r\n            <HeaderNavbar></HeaderNavbar>\r\n            <Grid></Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport MainContainer from './components/MainContainer/mainContainer';\n\nReactDOM.render(<MainContainer />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}